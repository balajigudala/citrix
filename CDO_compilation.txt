
CDO Compilation
Created by Patel, Jaydip (Apr 26, 2024 04:02), last edited by Patel, Jaydip (May 09, 2024 08:36)
********************** CDO COMPILATION *******************************
**********************************************************************

1. copy cdo_rts.h file to aie-rt code /driver/src/io_backend/ext/.
    - cp /proj/xsjsswstaff/ssatpute/cdo_rts.h /driver/src/io_backend/ext/.
2. compile aie-rt code 
    - make -f Makefile.Linux cdo
3. copy the driver/src path
    - pwd
4. Goto the application, export XILINX_VITIS_AIETOOLS="/proj/xbuilds/SWIP/2024.1_0506_2207/installs/lin64/Vitis/2024.1/aietools"
5. export LD_LIBRARY_PATH="PATH_TO_LOCAL_AIE-RT_CODE_DRIVER_SRC":"$XILINX_VITIS_AIETOOLS/lib/lnx.0" (lnx.0 may not present EX:lnx64.0 will be there ).
6. go to ps/cdo directory of the applicaiton
7. run make command
8. go to package.hw_emu directory of the application.
9. edit the boot_img.bif file. Comment the aie.merged.cdo.bin & uncomment the other cdo & replaced the path of the cdo with 
    step 6 cdo path.
10. Also, replace the pdi image path from boot_img.bif file(for better understanding see the sample boot_image.bif  mentioned below )
11. copy the run.sh & rootfs.ext4 from below path and run the script.
    - cp /proj/xsjsswstaff/jaydpate/workspace/graph_testcase/lab8_loopback_independent_graphs_v++_mode_aie_hw_emu/package.hw_emu/run.sh .
    - cp /proj/xbuilds/2024.1_daily_latest/internal_platforms/sw/versal/xilinx-versal-common-v2024.1/rootfs.ext4 .
















run.sh contains:

  1 rm BOOT.BIN
  2 bootgen -arch versal -image boot_image.bif -o BOOT.BIN
  3    cp BOOT.BIN sd_card/
  4    bootgen -arch versal -dump BOOT.BIN boot_files
  5    rm sd_card.img
  6    $XILINX_VITIS/scripts/vitis/util/mkfsImage.sh -s sd_card -e rootfs.ext4 -o sd_card.img
  7    $XILINX_VITIS/bin/sd_card_resize.py -sd-card sd_card.img
  8    ./launch_hw_emu.sh







12. Once hw_emu boot up done, run embedded_exc script.

Note:If embedded_exc script got error while running, check zocl driver presence in board doing lsmod if it is not there then
     repeat the steps from 9th step. Copy the rootfs.ext4 as mentioned in the application Makefile

Reference JIRAs:

[CR-1198099] [XRT] ERROR: ERROR: adf::graph::run: AIE driver error.: Input/output error - Xilinx Engineering JIRA

[CR-1195159] Clock gating is not released in soft partition flow: Fails in both hw and hw_emu - Xilinx Engineering JIRA

Sample boot_image.bif

all:
{
    image
    {
        { type=bootimage, file=/proj/xsjsswstaff/jaydpate/workspace/graph_testcase/aie1_loop_back_soft_partition/_x/link/vivado/vpl/.local/hw_platform/hw_emu_presynth.pdi }
    }
    image
    {
        name=aie_image, id=0x1c000000
        { type=cdo
          /* The following commented lines show the CDOs used to create a merged CDO 'aie_cdo_merged.bin'. For debugging purpose,
             uncomment these CDOs and comment the line that adds 'aie_cdo_merged.bin' */
          
          file = /proj/xsjsswstaff/jaydpate/workspace/graph_testcase/aie1_loop_back_soft_partition_soft_partition/_aie/ps/cdo/aie_cdo_reset.bin
          file = /proj/xsjsswstaff/jaydpate/workspace/graph_testcase/aie1_loop_back_soft_partition/_aie/ps/cdo/aie_cdo_clock_gating.bin
          file = /proj/xsjsswstaff/jaydpate/workspace/graph_testcase/aie1_loop_back_soft_partition/_aie/ps/cdo/aie_cdo_error_handling.bin
          file = /proj/xsjsswstaff/jaydpate/workspace/graph_testcase/aie1_loop_back_soft_partition/_aie/ps/cdo/aie_cdo_elfs.bin
          file = /proj/xsjsswstaff/jaydpate/workspace/graph_testcase/aie1_loop_back_soft_partition/_aie/ps/cdo/aie_cdo_init.bin
          
          //file=/proj/xsjsswstaff/jaydpate/workspace/graph_testcase/aie1_loop_back_soft_partition/package.hw_emu/aie.merged.cdo.bin
        }
    }
    image
    {
        name=default_subsys, id=0x1c000000
        { load=0x1000, file=/proj/xbuilds/XRT_EMBEDDED/2024.1/xilinx_vck190_base_202410_1/2024.1_0422_1231/packages/output/internal_platforms/xilinx_vck190_base_202410_1/sw/xilinx_vck190_base_202410_1/boot/system.dtb }
        { core=a72-0, exception_level=el-3, trustzone, file=/proj/xbuilds/XRT_EMBEDDED/2024.1/xilinx_vck190_base_202410_1/2024.1_0422_1231/packages/output/internal_platforms/xilinx_vck190_base_202410_1/sw/xilinx_vck190_base_202410_1/boot/bl31.elf }
        { core=a72-0, exception_level=el-2, load=0x8000000, file=/proj/xbuilds/XRT_EMBEDDED/2024.1/xilinx_vck190_base_202410_1/2024.1_0422_1231/packages/output/internal_platforms/xilinx_vck190_base_202410_1/sw/xilinx_vck190_base_202410_1/boot/u-boot.elf }
    }
}